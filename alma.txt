Processing func Main.main/()/
MONO CALL: Main.foo#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.True#-Main.Bar.bar -> Main.foo
MONO CALL: Main.recursive#-Main.Bar.bar -> Main.foo
Processing func Main.foo/()/Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.True#-Main.Bar.bar -> Main.foo
MONO CALL: Std.Ops.ImplicitConvert.implicitConvert/87#-Main.Bar.bar -> Main.foo
MONO CALL: Std.Basic.Util.println#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
Processing func Bool.Bool.True/()/Main.Bar.bar -> Main.foo
Processing func Main.recursive/()/Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Main.foo#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.True#-Main.Bar.bar -> Main.foo
MONO CALL: Std.Ops.ImplicitConvert.implicitConvert/87#-Main.Bar.bar -> Main.foo
MONO CALL: Std.Basic.Util.println#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Main.baz#-Main.Bar.bar -> Main.baz
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.baz
MONO CALL: Main.recursive#-Main.Bar.bar -> Main.baz
MONO CALL: Std.Ops.ImplicitConvert.implicitConvert/87#-Main.Bar.bar -> Main.foo
MONO CALL: Std.Basic.Util.println#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Main.recursive#-Main.Bar.bar -> Main.foo
Processing func Bool.Bool.False/()/Main.Bar.bar -> Main.foo
Processing func Std.Ops.ImplicitConvert.implicitConvert/87/()/Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.True#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.True#-Main.Bar.bar -> Main.foo
MONO CALL: String.StringLiteral.toString#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.True#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.True#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
Processing func Std.Basic.Util.println/()/Main.Bar.bar -> Main.foo
MONO CALL: Std.Basic.Util.printlnStr#-Main.Bar.bar -> Main.foo
MONO AUTO DROP: siko.autoDrop String.String
Processing func Main.baz/()/Main.Bar.bar -> Main.baz
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.baz
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.baz
MONO CALL: Bool.Bool.True#-Main.Bar.bar -> Main.baz
MONO CALL: Std.Ops.ImplicitConvert.implicitConvert/87#-Main.Bar.bar -> Main.baz
MONO CALL: Std.Basic.Util.println#-Main.Bar.bar -> Main.baz
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.baz
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.baz
Processing func Bool.Bool.False/()/Main.Bar.bar -> Main.baz
Processing func Main.recursive/()/Main.Bar.bar -> Main.baz
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.baz
MONO CALL: Main.baz#-Main.Bar.bar -> Main.baz
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.baz
MONO CALL: Bool.Bool.True#-Main.Bar.bar -> Main.baz
MONO CALL: Std.Ops.ImplicitConvert.implicitConvert/87#-Main.Bar.bar -> Main.baz
MONO CALL: Std.Basic.Util.println#-Main.Bar.bar -> Main.baz
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.baz
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.baz
MONO CALL: Main.baz#-Main.Bar.bar -> Main.baz
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.baz
MONO CALL: Main.recursive#-Main.Bar.bar -> Main.baz
MONO CALL: Std.Ops.ImplicitConvert.implicitConvert/87#-Main.Bar.bar -> Main.baz
MONO CALL: Std.Basic.Util.println#-Main.Bar.bar -> Main.baz
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.baz
MONO CALL: Main.recursive#-Main.Bar.bar -> Main.baz
Processing func String.StringLiteral.toString/()/Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: NativePtr.clone#(Int.U8)-Main.Bar.bar -> Main.foo
MONO CALL: Std.Ops.Clone.clone/14#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.True#-Main.Bar.bar -> Main.foo
MONO CALL: String.String#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.True#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.True#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO CALL: Bool.Bool.False#-Main.Bar.bar -> Main.foo
MONO AUTO DROP: siko.autoDrop String.StringLiteral
Processing func Std.Basic.Util.printlnStr/()/Main.Bar.bar -> Main.foo
Processing func siko.autoDrop#(String.String)-Main.Bar.bar -> Main.foo/()/Main.Bar.bar -> Main.foo
Success tests:
- effects/recursive - failed
Error tests:
Success: 0 failure: 1 skip: 0 - 0.00%
Failures:
effects/recursive
