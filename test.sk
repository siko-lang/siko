module Std.Ops {

trait Clone[A] {
    fn clone(&self) -> A
}

trait Copy[A]

}

module Bool {
enum Bool {
    True,
    False,
}
}

module Main {

struct Bar {

}

instance Clone[Bar] {
    fn clone(&self) -> Bar {
        Bar()
    }
}

instance Copy[Bar]

struct Foo {
    q : Quux,
}

struct Quux {
    b : Bar,
}

fn id[A](a: A) -> A {
    a
}

fn main() {
    let mut f = Foo(Quux(Bar()));
    id (f.q.b);
    id (f.q.b);
}

}
