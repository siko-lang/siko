module Main {

struct Thing {

}

struct Foo {
    bar: Bar,
}

struct Bar {
    baz: Baz,
}

struct Baz {
    fn doit0(self) -> Self {
        self
    }
    fn doit1(self) -> (Self, Thing) {
        (self, Thing())
    }
    fn doitMulti(self) -> (Self, Thing, Thing) {
        (self, Thing(), Thing())
    }
}

fn main() {
    let mut f = Foo(Bar(Baz()));
    let r0 = f.bar.baz.doit0();
    let r1 = f.bar.baz.doit1();
    let (a, b) = f.bar.baz.doitMulti();
    let mut b = Baz();
    let r2 = b.doit0();
    let r3 = b.doit1();
    let (c, d) = b.doitMulti();
}

}
