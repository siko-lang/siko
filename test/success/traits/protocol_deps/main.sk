module Main {

trait A[T] {
    fn a(self)
}

trait[T: A[T]] C[T] {
    fn c(self)
}

fn test[T: C[T]](x: T) {
    x.a();
}

struct Foo {

}

pub instance AImpl A[Foo] {
    fn a(self) {
    }
}

pub instance CImpl C[Foo] {
    fn c(self) {
    }
}

fn main() {
    let x = Foo();
    test(x);
}

}