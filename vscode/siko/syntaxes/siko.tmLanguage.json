{
   "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
   "name": "siko",
   "patterns": [
      {
         "include": "#comments"
      },
      {
         "include": "#keywords"
      },
      {
         "include": "#operators"
      },
      {
         "include": "#strings"
      },
      {
         "include": "#numbers"
      },
      {
         "include": "#builtins"
      },
      {
         "include": "#names"
      },
      {
         "include": "#characters"
      }
   ],
   "repository": {
      "comments": {
         "patterns": [
            {
               "name": "comment.line.double-slash.siko",
               "begin": "//",
               "beginCaptures": {
                  "0": {
                     "name": "punctuation.definition.comment.siko"
                  }
               },
               "end": "\n",
               "patterns": []
            },
            {
               "name": "comment.block.siko",
               "begin": "/\\*",
               "beginCaptures": {
                  "0": {
                     "name": "punctuation.definition.comment.siko"
                  }
               },
               "end": "\\*/",
               "endCaptures": {
                  "0": {
                     "name": "punctuation.definition.comment.siko"
                  }
               },
               "patterns": []
            }
         ]
      },
      "keywords": {
         "patterns": [
            {
               "name": "keyword.siko",
               "match": "\\b(let|match|if|else|then|do|return|for|in|while|loop|break|continue|try|yield|module|import|as|where|extern|fn|enum|struct|trait|instance|deriving|effect|with|implicit|using|self|Self|mut|type|pub|and|or)\\b"
            }
         ]
      },
      "strings": {
         "name": "string.quoted.double.siko",
         "begin": "\"",
         "end": "\"",
         "patterns": [
            {
               "name": "constant.character.escape.siko",
               "match": "\\\\."
            },
            {
               "name": "meta.interpolation.siko",
               "begin": "\\$\\{",
               "end": "\\}",
               "patterns": [
                  {
                     "include": "#keywords"
                  },
                  {
                     "include": "#operators"
                  },
                  {
                     "include": "#numbers"
                  },
                  {
                     "include": "#names"
                  }
               ]
            }
         ]
      },
      "characters": {
         "name": "character.quoted.double.siko",
         "begin": "'",
         "end": "'",
         "patterns": [
            {
               "name": "constant.character.escape.siko",
               "match": "\\\\."
            }
         ]
      },
      "numbers": {
         "name": "constant.numeric.siko",
         "match": "\\b[0-9]+(\\.[0-9]+)?\\b"
      },
      "operators": {
         "name": "keyword.operator.siko",
         "match": "((==|!=|<=|>=|<-|->|<|>))"
      },
      "names": {
         "patterns": [
            {
               "name": "entity.name.siko",
               "match": "\\b([A-Z][a-zA-Z0-9_]*)\\b"
            },
            {
               "name": "entity.name.function.siko",
               "match": "\\b([a-z][a-zA-Z0-9_]*)\\b"
            }
         ]
      }
   },
   "scopeName": "source.siko"
}