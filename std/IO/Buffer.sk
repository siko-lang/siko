module IO.Buffer {

import Slice

pub struct ByteBuffer {
    data: Vec[U8],

    pub fn new() -> ByteBuffer {
        ByteBuffer(Vec.new())
    }

    @safe
    pub fn asWriteBuffer(&self) -> WriteBuffer {
        WriteBuffer(self.data.slice())
    }

    @safe
    pub fn asReadBuffer(&self) -> ReadBuffer {
        ReadBuffer(self.data.slice())
    }
}

pub struct WriteBuffer {
    data: Slice[U8],

    pub fn new(data: Slice[U8]) -> WriteBuffer {
        WriteBuffer(data)
    }
}

pub struct ReadBuffer {
    data: Slice[U8],

    pub fn new(data: Slice[U8]) -> ReadBuffer {
        ReadBuffer(data)
    }
}

}