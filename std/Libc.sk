module Libc {
    pub fn memcpy(dest: void*, src: void*, n: U64) -> void* = extern "C" ("string.h")

    pub fn memmove(dest: void*, src: void*, n: U64) -> void* = extern "C"

    pub fn memcmp(s1: void*, s2: void*, n: U64) -> I32 = extern "C" ("string.h")

    pub fn malloc(size: U64) -> void* = extern "C" ("stdlib.h")

    pub fn free(ptr: void*) -> void = extern "C" ("stdlib.h")

    pub fn printf(format: *I8, len: I32, value: *U8) = extern "C" ("stdio.h") // TODO: implement varargs

    pub fn read(fd: I32, ptr: *U8, size: U64) -> Int = extern "C" ("unistd.h")

    pub fn abort() -> ! = extern "C" ("stdlib.h")
}
