module Libc.Unistd {

pub fn read(fd: I32, ptr: *U8, size: U64) -> Int = extern "C" ("unistd.h")

pub fn write(fd: I32, ptr: *U8, size: U64) -> Int = extern "C" ("unistd.h")

pub fn fsync(fd: I32) -> Int = extern "C" ("unistd.h")

pub fn close(fd: I32) -> I32 = extern "C" ("unistd.h")

pub fn sleep(seconds: U32) -> U32 = extern "C" ("unistd.h")

pub fn usleep(microseconds: U32) -> I32 = extern "C" ("unistd.h")

pub fn fork() -> U32 = extern "C" ("unistd.h")

pub fn execv(path: *U8, argv: **U8) -> I32 = extern "C" ("unistd.h")

pub fn execve(path: *U8, argv: **U8, envp: **U8) -> I32 = extern "C" ("unistd.h")

pub fn chdir(path: *U8) -> I32 = extern "C" ("unistd.h")

pub fn pipe(pipefd: *I32) -> I32 = extern "C" ("unistd.h")

pub fn dup2(oldfd: I32, newfd: I32) -> I32 = extern "C" ("unistd.h")

}
