module Std.Basic.Util {

import Libc

pub fn abort() -> ! = extern

pub fn printStr(v: &String) {
    Libc.printf("%.*s".slice().asPtr(), v.slice().asPtr(), v.len());
}

pub fn printlnStr(v: &String) {
    Libc.printf("%.*s\\n".slice().asPtr(), v.slice().asPtr(), v.len());
}

pub fn assert(v: Bool) {
    if v {
    } else {
        println("Assertion failed");
        abort();
    }
}

pub fn print(msg: &String) {
    printStr(msg);
}

pub fn println(msg: &String) {
    printlnStr(msg);
}

pub fn panic(msg: String) -> ! {
    printStr("PANIC");
    printStr(msg);
    abort();
}

}
