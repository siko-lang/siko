module Siko.Syntax.Data {

import Siko.Syntax.Module
import Siko.Syntax.Identifier
import Siko.Syntax.Type
import Siko.Syntax.Function

@derive(Clone, PartialEq, Eq)
pub struct Struct {
    pub name: Identifier,
    pub typeParams: Option[TypeParameterDeclaration],
    pub isExtern: Bool,
    pub fields: Vec[Field],
    pub methods: Vec[Function],
    pub derives: Vec[Derive],
    pub public: Bool,
}

@derive(Clone, PartialEq, Eq)
pub struct Enum {
    pub name: Identifier,
    pub typeParams: Option[TypeParameterDeclaration],
    pub variants: Vec[Variant],
    pub methods: Vec[Function],
    pub derives: Vec[Derive],
    pub public: Bool,
}

@derive(Clone, PartialEq, Eq)
pub struct Variant {
    pub name: Identifier,
    pub items: Vec[Type],
}

@derive(Clone, PartialEq, Eq)
pub struct Field {
    pub name: Identifier,
    pub ty: Type,
    pub public: Bool,
}

}