module Siko.Syntax.Module {

import Siko.Syntax.Data
import Siko.Syntax.Function
import Siko.Syntax.Global
import Siko.Syntax.Effect
import Siko.Syntax.Implicit
import Siko.Syntax.Trait
import Siko.Syntax.Attributes
import Siko.Syntax.Identifier

@derive(Clone, PartialEq, Eq)
pub struct Derive {
    pub name: Identifier,
}

@derive(Clone, PartialEq, Eq)
pub enum ModuleItem {
    Struct(Struct),
    Enum(Enum),
    Function(Function),
    Global(Global),
    Import(Import),
    Effect(Effect),
    Implicit(Implicit),
    Trait(Trait),
    Instance(Instance),
}

@derive(PartialEq, Eq, Clone)
pub struct Import {
    pub moduleName: Identifier,
    pub alias: Option[Identifier],
    pub implicitImport: Bool,
}

@derive(PartialEq, Eq, Clone)
pub struct Module {
    pub name: Identifier,
    pub items: Vec[ModuleItem],
    pub attributes: Attributes,
}

}